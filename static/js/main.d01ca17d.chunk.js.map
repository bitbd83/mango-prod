{"version":3,"sources":["utils/getRpcUrl.ts","contexts/Localisation/translationsContext.ts","components/Tags.tsx","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","components/layout/Container.tsx","components/layout/Page.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","contexts/RefreshContext.tsx","hooks/useRefresh.ts","config/constants/types.ts","config/constants/index.ts","components/UnlockButton.tsx","hooks/useHarvest.ts","config/constants/contracts.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","config/index.ts","utils/addressHelpers.ts","components/layout/Flex.tsx","hooks/useApprove.ts","hooks/useStake.ts","hooks/useUnstake.ts","hooks/useWeb3.ts","hooks/useContract.ts","utils/callHelpers.ts","state/actions.ts","utils/multicall.ts","config/constants/pools.ts","utils/formatBalance.ts","config/constants/farms.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","contexts/BlockContext.tsx","hooks/useBlock.ts","views/Pools/components/Card.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Coming.tsx","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/OldJuiceTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Mango.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","state/hooks.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","utils/web3.ts"],"names":["nodes","process","getNodeUrl","randomIndex","random","length","defaultTranslationState","translations","setTranslations","TranslationsContext","createContext","CoreTag","variant","outline","startIcon","CommunityTag","BinanceTag","fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","calls","address","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","BigNumber","div","pow","tokenPriceVsQuote","tokenSymbol","QuoteToken","BUSD","quoteTokenSymbol","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","pid","info","totalAllocPoint","mangoPerBlock","allocPoint","_hex","poolWeight","toJSON","toNumber","multiplier","toString","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","Container","styled","theme","mediaQueries","sm","Page","lg","StyledInputWrapper","props","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","TranslateString","useI18n","toLocaleString","size","onClick","RefreshContext","React","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","useRefresh","useContext","fastRefresh","slowRefresh","PoolCategory","communityFarms","filter","isCommunity","UnlockButton","useWallet","connect","reset","onPresentConnectModal","useWalletModal","useHarvest","farmPid","useDispatch","masterChefContract","useMasterchef","onReward","useCallback","harvest","txHash","useAllHarvest","farmPids","harvestPromises","reduce","accum","useMangoHarvest","juiceId","isUsingBnb","mangoChefContract","useMangoChef","handleHarvest","mangoHarvestBnb","mangoHarvest","updateUserPendingReward","updateUserBalance","mango","97","56","masterChef","mangoChef","mangoChefBnb","wbnb","pizza","chs","mulltiCall","busd","lottery","lotteryNFT","usdt","kp3rb","kiwi","ankr","usdc","cake","eth","kitty","pup","variableRegex","getTranslation","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","config","EXPONENTIAL_AT","DECIMAL_PLACES","MANGO_PER_BLOCK","BLOCKS_PER_YEAR","MANGO_POOL_PID","getMangoAddress","addresses","chainId","getMulticallAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","FlexLayout","useApprove","lpContract","onApprove","approve","tx","useMangoApprove","updateUserAllowance","useMangoStake","handleStake","amount","stake","mangoStakeBnb","mangoStake","updateUserStakedBalance","onStake","useStake","console","JUICEIDS","useMangoUnstake","isOldJuice","onUnstake","unstake","mangoEmegencyUnstake","mangoUnstake","useUnstake","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","ethereum","refEth","useRef","web3","setweb3","current","useContract","abi","contractOptions","Contract","contract","setContract","useERC20","useMango","useLottery","id","poolsConfig","pool","rawAbi","poolCategory","BINANCE","contractAddress","methods","options","ethers","constants","MaxUint256","send","from","deposit","on","transactionHash","withdraw","emergencyWithdraw","getWeb3","multi","MultiCallAbi","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","aggregate","returnData","res","i","decodeFunctionResult","pools","getBalanceNumber","balance","decimals","displayBalance","dividedBy","getFullDisplayBalance","toFixed","lpSymbol","BNB","contracts","CHS","PIZZA","USDT","CAKE","KITTY","ANKR","PUP","nonBnbPools","p","stakingTokenName","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","stakingTokenAddress","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","mangoChefABI","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingMango","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","GlobalStyle","createGlobalStyle","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","projectId","parseInt","REACT_APP_CROWDIN_PROJECT_ID","stringTranslationsApi","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","LanguageContextProvider","storedLangCode","localStorage","getItem","storedLang","getStoredLang","listLanguageTranslations","undefined","fetchTranslationsForSelectedLanguage","then","translationApiResponse","catch","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","label","icon","href","items","Menu","mangoPriceUsd","usePriceMangoBusd","login","logout","currentLang","langs","setLang","links","Wrapper","PageLoader","BlockContext","BlockContextProvider","previousBlock","block","setBlock","getBlockNumber","blockNumber","useBlock","Card","card","isFinished","isActive","CardTitle","Balance","Label","textSubtle","DetailPlaceholder","Value","Footer","Coming","style","padding","role","aria-label","src","width","height","alt","as","external","fullWidth","mb","flex","StyledLabel","StyledText","Text","isDisabled","color","textDisabled","fontSize","unit","previousValue","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","e","currentTarget","handleSelectMax","title","ModalActions","disabled","WithdrawModal","CompoundModal","BalanceRow","Number","Title","ActionLink","OldJuiceTitle","hasBalance","target","StyledButton","button","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","CORE","COMMUNITY","StyledFooter","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","marginBottom","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","image","apy","startBlock","endBlock","stakingLimit","isBnbPool","stakingTokenContract","requestedApproval","setRequestedApproval","Math","MANGO","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","HarvestButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","activeIndex","Hero","Farm","path","useFarms","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","stakingTokenFarm","s","stakingTokenPriceInBNB","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","priceToBnb","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Divider","Flex","exact","orderBy","Home","lazy","Farms","NotFound","App","window","useFetchPublicData","Global","component","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","ZERO","useSelector","useFarmFromPid","useFarmFromSymbol","useFarmUser","Spacer","StyledModalActions","primaryDark","StyledModalAction","l","Children","toArray","child","getContract"],"mappings":"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","file":"static/js/main.d01ca17d.chunk.js","sourcesContent":["import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@mangofarm/uikit'\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag }\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\nimport { QuoteToken } from '../../config/constants/types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      let tokenAmount\n      let lpTotalInQuoteToken\n      let tokenPriceVsQuote\n      if (farmConfig.isTokenOnly) {\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals))\n        if (farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD) {\n          tokenPriceVsQuote = new BigNumber(1)\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote)\n      } else {\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if (tokenAmount.comparedTo(0) > 0) {\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount)\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n      }\n\n      const [info, totalAllocPoint, mangoPerBlock] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'mangoPerBlock',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        mangoPerBlock: new BigNumber(mangoPerBlock).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingMango',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@mangofarm/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  mangoToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\n  export enum QuoteToken {\n  'BNB' = 'BNB',\n  'MANGO' = 'MANGO',\n  'PIZZA' = 'PIZZA',\n  'CHS' = 'CHS',\n  'USDT' = 'USDT',\n  'BUSD' = 'BUSD',\n  'HOTS' = 'HOTS',\n  'DAI' = 'DAI',\n  'ETH' = 'ETH',\n  'USDC' = 'USDC',\n  'JUICE' = 'JUICE',\n  'KITTY' = 'KITTY',\n  'PUP' = 'PUP',\n  'CAKE' = 'CAKE',\n  'ANKR' = 'ANKR',\n}\n\n\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  juiceId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import React from 'react'\nimport { Button, useWalletModal } from '@mangofarm/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { mangoHarvest, mangoHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useMangoChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useMangoHarvest = (juiceId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const mangoChefContract = useMangoChef(juiceId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (juiceId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await mangoHarvestBnb(mangoChefContract, account)\n    } else {\n      await mangoHarvest(mangoChefContract, account)\n    }\n    dispatch(updateUserPendingReward(juiceId, account))\n    dispatch(updateUserBalance(juiceId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, mangoChefContract, juiceId])\n\n  return { onReward: handleHarvest }\n}\n","export default {\n  mango: {\n    97: '',\n    56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n  },\n  masterChef: {\n    97: '',\n    56: '0xB8c0B207a2eC0FB7011FAF2F5d7Fb98D2222fF98',\n  },\n  mangoChef: {\n    97: '',\n    56: '0xB8c0B207a2eC0FB7011FAF2F5d7Fb98D2222fF98',\n  },\n  mangoChefBnb: {\n    97: '',\n    56: '0xB8c0B207a2eC0FB7011FAF2F5d7Fb98D2222fF98',\n  },\n  wbnb: {\n    97: '',\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  },\n  pizza: {\n    97: '',\n    56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n  },\n  chs: {\n    97: '',\n    56: '0xaDD8A06fd58761A5047426e160B2B88AD3B9D464',\n  },\n  mulltiCall: {\n    97: '',\n    56: '0x52E54D127cA6474aB1C700335C4714f2515b4f3D',\n  },\n  busd: {\n    97: '',\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n  },\n  lottery: {\n    97: '',\n    56: '0x52E54D127cA6474aB1C700335C4714f2515b4f3D',\n  },\n  lotteryNFT: {\n    97: '',\n    56: '0x52E54D127cA6474aB1C700335C4714f2515b4f3D',\n  },\n  usdt: {\n    97: '',\n    56: '0x55d398326f99059ff775485246999027b3197955',\n  },\n  kp3rb: {\n    97: '',\n    56: '0x5EA29eEe799aA7cC379FdE5cf370BC24f2Ea7c81',\n  },\n  \"1inch\": {\n    97: '',\n    56: '0x111111111117dC0aa78b770fA6A738034120C302',\n  },\n  kiwi: {\n    97: '',\n    56: '0xCfDf8A80fECAeeCC144fa74c0Df8691BFd0e26e3',\n  },\n  ankr: {\n    97: '',\n    56: '0xf307910A4c7bbc79691fD374889b36d8531B08e3',\n  },\n  usdc: {\n    97: '',\n    56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  },\n  cake: {\n    97: '',\n    56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n  },\n  eth: {\n    97: '',\n    56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  },\n  kitty: {\n    97: '',\n    56: '0x5b4963b964bac5c2db83e53fffe46e0cb83a1346',\n  },\n  pup: {\n    97: '',\n    56: '0x74E39070a40ce9eD64dC60CE51127b9394711EE2',\n  },\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const MANGO_PER_BLOCK = new BigNumber(5)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const MANGO_POOL_PID = 1\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getMangoAddress = () => {\n  return addresses.mango[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useMango, useMangoChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useMangoApprove = (lpContract: Contract, juiceId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const mangoChefContract = useMangoChef(juiceId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, mangoChefContract, account)\n      dispatch(updateUserAllowance(juiceId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, mangoChefContract, juiceId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const mangoContract = useMango()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(mangoContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, mangoContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, mangoStake, mangoStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useMangoChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useMangoStake = (juiceId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const mangoChefContract = useMangoChef(juiceId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (juiceId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await mangoStakeBnb(mangoChefContract, amount, account)\n      } else {\n        await mangoStake(mangoChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(juiceId, account))\n      dispatch(updateUserBalance(juiceId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, mangoChefContract, juiceId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, mangoUnstake, mangoEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useMangoChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst JUICEIDS = []\n\nexport const useMangoUnstake = (juiceId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const mangoChefContract = useMangoChef(juiceId)\n  const isOldJuice = JUICEIDS.includes(juiceId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (juiceId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldJuice) {\n        const txHash = await mangoEmegencyUnstake(mangoChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await mangoUnstake(mangoChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(juiceId, account))\n      dispatch(updateUserBalance(juiceId, account))\n      dispatch(updateUserPendingReward(juiceId, account))\n    },\n    [account, dispatch, isOldJuice, masterChefContract, mangoChefContract, juiceId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getMangoAddress, getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport mangoRabbits from 'config/abi/mangoRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport mangoChef from 'config/abi/mangoChef.json'\nimport mangoChefBnb from 'config/abi/mangoChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useMango = () => {\n  return useERC20(getMangoAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePanmangoRabbits = (address: string) => {\n  const mangoRabbitsAbi = (mangoRabbits as unknown) as AbiItem\n  return useContract(mangoRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useMangoChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.juiceId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? mangoChefBnb : mangoChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const mangoStake = async (mangoChefContract, amount, account) => {\n  return mangoChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const mangoStakeBnb = async (mangoChefContract, amount, account) => {\n  return mangoChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const mangoUnstake = async (mangoChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (mangoChefContract.options.address === '0xB8c0B207a2eC0FB7011FAF2F5d7Fb98D2222fF98') {\n    return mangoChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (mangoChefContract.options.address === '0xB8c0B207a2eC0FB7011FAF2F5d7Fb98D2222fF98') {\n    return mangoChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return mangoChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const mangoEmegencyUnstake = async (mangoChefContract, amount, account) => {\n  return mangoChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const mangoHarvest = async (mangoChefContract, account) => {\n  return mangoChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const mangoHarvestBnb = async (mangoChefContract, account) => {\n  return mangoChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n/*  {\n  juiceId: 0,\n tokenName: 'MANGO',\n  stakingTokenName: QuoteToken.MANGO,\nstakingTokenAddress: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n contractAddress: {\n   97: '',\n   56: '0xB8c0B207a2eC0FB7011FAF2F5d7Fb98D2222fF98',\n     },\n    poolCategory: PoolCategory.CORE,\n   projectLink: 'https://mango.cheeseswap.app/',\n    harvest: true,\n  tokenPerBlock: '0.5',\n   sortOrder: 1,\n    isFinished: false,\n  tokenDecimals: 18,\n}, */\n\n]\n\nexport default pools\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n\n\n  {\n   pid: 1,\n   lpSymbol: 'MANGO-BNB LP',\n   lpAddresses: {\n     97: '',\n     56: '0xB0361a92E2646F9F11f1670484f09D585fe4a419',\n   },\n   tokenSymbol: 'MANGO',\n   tokenAddresses: {\n     97: '',\n     56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n   },\n   quoteTokenSymbol: QuoteToken.BNB,\n   quoteTokenAdresses: contracts.wbnb,\n },\n\n {\n pid: 2,\n lpSymbol: 'BNB-BUSD LP',\n lpAddresses: {\n   97: '',\n   56: '0xF455f6f7988B752F75488E2CCcC030346d0Cac72',\n },\n tokenSymbol: 'BNB',\n tokenAddresses: {\n   97: '',\n   56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n },\n quoteTokenSymbol: QuoteToken.BUSD,\n quoteTokenAdresses: contracts.busd,\n},\n    {\n    pid: 3,\n    lpSymbol: 'MANGO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE5fE53149A278aF40ACb04334c4140eE7444BE4B',\n    },\n    tokenSymbol: 'MANGO',\n    tokenAddresses: {\n      97: '',\n      56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n\n  {\n pid: 4,\n lpSymbol: 'MANGO-CHS LP',\n lpAddresses: {\n   97: '',\n   56: '0xF63c29444fdE98d8227088Cd4AEb48E33B6b0000',\n },\n tokenSymbol: 'MANGO',\n tokenAddresses: {\n   97: '',\n   56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n },\n quoteTokenSymbol: QuoteToken.CHS,\n quoteTokenAdresses: contracts.chs,\n},\n\n{\n pid: 5,\n lpSymbol: 'MANGO-PIZZA LP',\n lpAddresses: {\n   97: '',\n   56: '0x80bEC1095372cE1A01e3ACd2A5B5eC3140DdFA20',\n },\n tokenSymbol: 'MANGO',\n tokenAddresses: {\n   97: '',\n   56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n },\n quoteTokenSymbol: QuoteToken.PIZZA,\n quoteTokenAdresses: contracts.pizza,\n},\n\n{\n pid: 6,\n lpSymbol: 'ETH-BUSD LP',\n lpAddresses: {\n   97: '',\n   56: '0x7d1a03b432c5f04A426F4Eaf41037fe8Dd695b89',\n },\n tokenSymbol: 'ETH',\n tokenAddresses: {\n   97: '',\n   56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n },\n quoteTokenSymbol: QuoteToken.BUSD,\n quoteTokenAdresses: contracts.busd,\n},\n\n{\n pid: 7,\n lpSymbol: 'USDT-BNB LP',\n lpAddresses: {\n   97: '',\n   56: '0xcfD63197d764cd70d07bB607e6367Ae0E869BaDD',\n },\n tokenSymbol: 'USDT',\n tokenAddresses: {\n   97: '',\n   56: '0x55d398326f99059ff775485246999027b3197955',\n },\n quoteTokenSymbol: QuoteToken.BNB,\n quoteTokenAdresses: contracts.wbnb,\n},\n\n{\n pid: 8,\n lpSymbol: 'PIZZA-BNB LP',\n lpAddresses: {\n   97: '',\n   56: '0x8405Be915Af56589756A275d4894FA9f0Ff6CA0F',\n },\n tokenSymbol: 'MANGO',\n tokenAddresses: {\n   97: '',\n   56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n },\n quoteTokenSymbol: QuoteToken.BNB,\n quoteTokenAdresses: contracts.wbnb,\n},\n\n{\n pid: 9,\n lpSymbol: 'CHS-BNB LP',\n lpAddresses: {\n   97: '',\n   56: '0x51A162dd678d75C269Ef6680193C019e0B4Bda7E',\n },\n tokenSymbol: 'MANGO',\n tokenAddresses: {\n   97: '',\n   56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n },\n quoteTokenSymbol: QuoteToken.BNB,\n quoteTokenAdresses: contracts.wbnb,\n},\n\n{\n pid: 10,\n lpSymbol: 'MANGO-USDT LP',\n lpAddresses: {\n   97: '',\n   56: '0x4aB5135A7f7A814a67a3F0638e42F55C7caE2F69',\n },\n tokenSymbol: 'MANGO',\n tokenAddresses: {\n   97: '',\n   56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n },\n quoteTokenSymbol: QuoteToken.USDT,\n quoteTokenAdresses: contracts.usdt,\n},\n\n{\n  pid: 11,\n  isTokenOnly: true,\n  lpSymbol: 'MANGO',\n  lpAddresses: {\n    97: '',\n    56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n  },\n  tokenSymbol: 'MANGO',\n  tokenAddresses: {\n    97: '',\n    56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n  },\n  quoteTokenSymbol: QuoteToken.BUSD,\n  quoteTokenAdresses: contracts.busd,\n},\n\n{\n  pid: 12,\n  lpSymbol: 'KP3RB-BNB',\n  lpAddresses: {\n    97: '',\n    56: '0x2113bA4000d8a0B201C3e916E63Fe0DCDfBe476a',\n  },\n  tokenSymbol: 'MANGO',\n  tokenAddresses: {\n    97: '',\n    56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n  },\n  quoteTokenSymbol: QuoteToken.BNB,\n  quoteTokenAdresses: contracts.wbnb,\n},\n\n{\n  pid: 13,\n  lpSymbol: 'KIWI-BNB',\n  lpAddresses: {\n    97: '',\n    56: '0xDf8481f4ffb688d940f59F839c2613cc6C40a79E',\n  },\n  tokenSymbol: 'MANGO',\n  tokenAddresses: {\n    97: '',\n    56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n  },\n  quoteTokenSymbol: QuoteToken.BNB,\n  quoteTokenAdresses: contracts.wbnb,\n},\n\n{\n  pid: 14,\n  lpSymbol: '1INCH-BUSD',\n  lpAddresses: {\n    97: '',\n    56: '0x5a1253807e43948b5cD2382673703c917BbC7B60',\n  },\n  tokenSymbol: 'MANGO',\n  tokenAddresses: {\n    97: '',\n    56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n  },\n  quoteTokenSymbol: QuoteToken.BUSD,\n  quoteTokenAdresses: contracts.busd,\n},\n\n{\n  pid: 16,\n  lpSymbol: 'MANGO-CAKE',\n  lpAddresses: {\n    97: '',\n    56: '0xe4463e95b751E65FE91AE58C9D9fC7Df8cad0400',\n  },\n  tokenSymbol: 'MANGO',\n  tokenAddresses: {\n    97: '',\n    56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n  },\n  quoteTokenSymbol: QuoteToken.CAKE,\n  quoteTokenAdresses: contracts.cake,\n},\n\n{\n  pid: 17,\n  lpSymbol: '1INCH-BNB',\n  lpAddresses: {\n    97: '',\n    56: '0xc2BBDf2A378661F3777FC3c524732014e5d912f8',\n  },\n  tokenSymbol: 'MANGO',\n  tokenAddresses: {\n    97: '',\n    56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n  },\n  quoteTokenSymbol: QuoteToken.BNB,\n  quoteTokenAdresses: contracts.wbnb,\n},\n\n     {\n      pid: 18,\n      lpSymbol: 'KITTY-MANGO LP',\n      lpAddresses: {\n        97: '',\n        56: '0xc4b3561619d37Bf1c44e303e480F14f7b9A34C4e',\n      },\n      tokenSymbol: 'MANGO',\n      tokenAddresses: {\n        97: '',\n        56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n      },\n      quoteTokenSymbol: QuoteToken.KITTY,\n      quoteTokenAdresses: contracts.kitty,\n    },\n\n    {\n     pid: 19,\n     lpSymbol: 'CHS-ANKR LP',\n     lpAddresses: {\n       97: '',\n       56: '0x11a09d542492EEEC261C6a6F7485A47452b25ACE',\n     },\n     tokenSymbol: 'MANGO',\n     tokenAddresses: {\n       97: '',\n       56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n     },\n     quoteTokenSymbol: QuoteToken.ANKR,\n     quoteTokenAdresses: contracts.ankr,\n   },\n\n    {\n      pid: 20,\n      isTokenOnly: true,\n      lpSymbol: 'KITTY',\n      lpAddresses: {\n        97: '',\n        56: '0x5b4963B964bAc5C2Db83e53ffFe46E0cb83a1346',\n      },\n      tokenSymbol: 'MANGO',\n      tokenAddresses: {\n        97: '',\n        56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n      },\n      quoteTokenSymbol: QuoteToken.KITTY,\n      quoteTokenAdresses: contracts.kitty,\n    },\n\n    {\n      pid: 22,\n      isTokenOnly: true,\n      lpSymbol: 'PUP',\n      lpAddresses: {\n        97: '',\n        56: '0x74E39070a40ce9eD64dC60CE51127b9394711EE2',\n      },\n      tokenSymbol: 'MANGO',\n      tokenAddresses: {\n        97: '',\n        56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n      },\n      quoteTokenSymbol: QuoteToken.PUP,\n      quoteTokenAdresses: contracts.pup,\n    },\n\n     {\n          pid: 21,\n          lpSymbol: 'PUP-MANGO LP',\n          lpAddresses: {\n            97: '',\n            56: '0x8E1D5fD5c3c390877615366398bF8B1C85dE8ACd',\n          },\n          tokenSymbol: 'MANGO',\n          tokenAddresses: {\n            97: '',\n            56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n          },\n          quoteTokenSymbol: QuoteToken.PUP,\n          quoteTokenAdresses: contracts.pup,\n        },\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n]\n\nexport default farms\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport mangoChefABI from 'config/abi/mangoChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Mango / Mango is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.juiceId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.juiceId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.juiceId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.juiceId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(mangoChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.juiceId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Mango / Mango pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(mangoChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.juiceId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Mango / Mango pool\n  const pendingReward = await masterChefContract.methods.pendingMango('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.juiceId === pool.juiceId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.juiceId === pool.juiceId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, juiceId } = action.payload\n      const index = state.data.findIndex((p) => p.juiceId === juiceId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.juiceId === pool.juiceId)\n    const totalStaking = totalStakings.find((entry) => entry.juiceId === pool.juiceId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    juiceId: pool.juiceId,\n    allowance: allowances[pool.juiceId],\n    stakingTokenBalance: stakingTokenBalances[pool.juiceId],\n    stakedBalance: stakedBalances[pool.juiceId],\n    pendingReward: pendingRewards[pool.juiceId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (juiceId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ juiceId, field: 'allowance', value: allowances[juiceId] }))\n}\n\nexport const updateUserBalance = (juiceId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ juiceId, field: 'stakingTokenBalance', value: tokenBalances[juiceId] }))\n}\n\nexport const updateUserStakedBalance = (juiceId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ juiceId, field: 'stakedBalance', value: stakedBalances[juiceId] }))\n}\n\nexport const updateUserPendingReward = (juiceId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ juiceId, field: 'pendingReward', value: pendingRewards[juiceId] }))\n}\n\nexport default PoolsSlice.reducer\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { MangoTheme } from '@mangofarm/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends MangoTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Nunito Sans', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  AR,\n  CA,\n  ZHCN,\n  ZHTW,\n  CS,\n  DA,\n  DE,\n  NL,\n  FIL,\n  FI,\n  FR,\n  EL,\n  HI,\n  HU,\n  ID,\n  IT,\n  JA,\n  KO,\n  PTBR,\n  RO,\n  RU,\n  SR,\n  ESES,\n  SVSE,\n  TA,\n  TR,\n  UK,\n  VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'mangoSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECT_ID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch(() => {\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@mangofarm/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@mangofarm/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://cheeseswap.app/#/swap',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://cheeseswap.app/#/pool',\n      },\n    ],\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n\n  {\n    label: 'More Farms',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'PIZZA',\n        href: 'https://pizza.cheeseswap.app',\n      },\n      {\n        label: 'KIWI',\n        href: 'https://kiwi.cheeseswap.app',\n      },\n      {\n        label: 'HOTS',\n        href: 'https://hots.cheeseswap.app',\n      },\n      {\n        label: 'CNFT',\n        href: 'https://cnft.cheeseswap.app',\n      },\n    ],\n  },\n  {\n    label: 'More',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'Github',\n        href: 'https://github.com/bitbd83/mango-finance',\n      },\n    ],\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from '@mangofarm/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceMangoBusd } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const mangoPriceUsd = usePriceMangoBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      mangoPriceUsd={mangoPriceUsd.toNumber()}\n      links={config}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@mangofarm/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Image, Button } from '@mangofarm/uikit'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport Card from './Card'\nimport CardTitle from './CardTitle'\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  padding: 24px;\n`\nconst Coming: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <div style={{ padding: '24px' }}>\n        <CardTitle>\n          {TranslateString(414, 'Your Project?')}{' '}\n          <span role=\"img\" aria-label=\"eyes\">\n            👀\n          </span>\n        </CardTitle>\n        <Image src=\"/images/bunny-question.svg\" width={64} height={64} alt=\"Your project here\" />\n        <Balance>???</Balance>\n        <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\n        <Button\n          variant=\"secondary\"\n          as=\"a\"\n          href=\"https://docs.google.com/forms/d/e/1FAIpQLScGdT5rrVMr4WOWr08pvcroSeuIOtEJf1sVdQGVdcAOqryigQ/viewform\"\n          external\n          fullWidth\n          mb=\"16px\"\n        >\n          {TranslateString(418, 'Apply Now')}\n        </Button>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          <Value>??</Value>\n        </DetailPlaceholder>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label=\"juice\">\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Value>??? MANGO</Value>\n        </DetailPlaceholder>\n      </div>\n      <Footer>\n        <CommunityTag />\n      </Footer>\n    </Card>\n  )\n}\n\nexport default Coming\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@mangofarm/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@mangofarm/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@mangofarm/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@mangofarm/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-mango\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldJuiceTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://mangoswap.medium.com/urgent-action-required-changes-to-juice-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldJuiceTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"juice\">\n                  🥞{' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@mangofarm/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useMangoApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useMangoStake } from 'hooks/useStake'\nimport { useMangoUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMangoHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldJuiceTitle from './OldJuiceTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    juiceId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useMangoApprove(stakingTokenContract, juiceId)\n  const { onStake } = useMangoStake(juiceId, isBnbPool)\n  const { onUnstake } = useMangoUnstake(juiceId)\n  const { onReward } = useMangoHarvest(juiceId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldJuice = stakingTokenName === QuoteToken.MANGO\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && juiceId !== 0}>\n      {isFinished && juiceId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && juiceId !== 0}>\n          {isOldJuice && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldJuice && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldJuice ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {juiceId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldJuiceTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && juiceId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldJuice ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldJuice\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldJuice && (\n                  <IconButton disabled={isFinished && juiceId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldJuice || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@mangofarm/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@mangofarm/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.juiceId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(282, 'JUICE Pool')}\n          </Heading>\n          <ul>\n            <li>{TranslateString(580, 'Stake MANGO to earn new tokens.')}</li>\n            <li>{TranslateString(404, 'You can unstake at any time.')}</li>\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n          </ul>\n        </div>\n        <img src=\"/images/juice.png\" alt=\"JUICE POOL icon\" width={410} height={191} />\n      </Hero>\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.juiceId} pool={pool} />\n            ))}\n            <Coming />\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.juiceId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@mangofarm/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\n// import NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\nimport Pools from './views/Pools'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\n// const Lottery = lazy(() => import('./views/Lottery'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/juice\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@mangofarm/uikit'\nimport bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <UseWalletProvider\n            chainId={parseInt(process.env.REACT_APP_CHAIN_ID)}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import BigNumber from 'bignumber.js'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool } from './types'\nimport { QuoteToken } from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (juiceId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.juiceId === juiceId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 2 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceMangoBusd = (): BigNumber => {\n  const pid = 1 // MANGO-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms()\n  const bnbPrice = usePriceBnbBusd()\n  const mangoPrice = usePriceMangoBusd()\n  let value = new BigNumber(0)\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\n      } else if (farm.quoteTokenSymbol === QuoteToken.MANGO) {\n        val = mangoPrice.times(farm.lpTotalInQuoteToken)\n      }else{\n        val = farm.lpTotalInQuoteToken\n      }\n      value = value.plus(val)\n    }\n  }\n  return value\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n"],"sourceRoot":""}